console.log(process);

// process {
//     version: 'v16.19.1',
//     versions: {
//       node: '16.19.1',
//       v8: '9.4.146.26-node.24',
//       uv: '1.43.0',
//       zlib: '1.2.11',
//       brotli: '1.0.9',
//       ares: '1.18.1',
//       modules: '93',
//       nghttp2: '1.47.0',
//       napi: '8',
//       llhttp: '6.0.10',
//       openssl: '1.1.1t+quic',
//       cldr: '41.0',
//       icu: '71.1',
//       tz: '2022f',
//       unicode: '14.0',
//       ngtcp2: '0.8.1',
//       nghttp3: '0.7.0'
//     },
//     arch: 'arm64',
//     platform: 'darwin',
//     release: {
//       name: 'node',
//       lts: 'Gallium',
//       sourceUrl: 'https://nodejs.org/download/release/v16.19.1/node-v16.19.1.tar.gz',
//       headersUrl: 'https://nodejs.org/download/release/v16.19.1/node-v16.19.1-headers.tar.gz'
//     },
//     _rawDebug: [Function: _rawDebug],
//     moduleLoadList: [
//       'Internal Binding builtins',
//       'Internal Binding errors',
//       'NativeModule internal/errors',
//       'Internal Binding config',
//       'Internal Binding timers',
//       'Internal Binding async_wrap',
//       'Internal Binding constants',
//       'Internal Binding util',
//       'Internal Binding types',
//       'NativeModule internal/util',
//       'NativeModule internal/util/types',
//       'NativeModule internal/validators',
//       'NativeModule internal/promise_hooks',
//       'Internal Binding task_queue',
//       'Internal Binding symbols',
//       'NativeModule internal/async_hooks',
//       'NativeModule internal/linkedlist',
//       'NativeModule internal/priority_queue',
//       'NativeModule internal/assert',
//       'Internal Binding icu',
//       'NativeModule internal/util/inspect',
//       'NativeModule internal/util/debuglog',
//       'NativeModule internal/timers',
//       'NativeModule events',
//       'Internal Binding buffer',
//       'Internal Binding string_decoder',
//       'NativeModule internal/buffer',
//       'Internal Binding blob',
//       'NativeModule internal/encoding',
//       'Internal Binding messaging',
//       'NativeModule internal/worker/js_transferable',
//       'NativeModule internal/constants',
//       'NativeModule internal/blob',
//       'NativeModule buffer',
//       'NativeModule internal/modules/esm/handle_process_exit',
//       'Internal Binding process_methods',
//       'NativeModule internal/process/per_thread',
//       'Internal Binding credentials',
//       'NativeModule internal/process/promises',
//       'NativeModule internal/fixed_queue',
//       'NativeModule async_hooks',
//       'NativeModule internal/process/task_queues',
//       'Internal Binding trace_events',
//       'NativeModule internal/console/constructor',
//       'NativeModule internal/console/global',
//       'NativeModule internal/util/inspector',
//       'Internal Binding inspector',
//       'NativeModule internal/querystring',
//       'NativeModule path',
//       'NativeModule querystring',
//       'Internal Binding url',
//       'NativeModule internal/url',
//       'NativeModule internal/util/parse_args/utils',
//       'NativeModule internal/util/parse_args/parse_args',
//       'NativeModule util',
//       'Internal Binding performance',
//       'NativeModule internal/perf/utils',
//       'NativeModule internal/event_target',
//       'NativeModule timers',
//       'NativeModule internal/abort_controller',
//       'Internal Binding worker',
//       'NativeModule internal/streams/end-of-stream',
//       'NativeModule internal/streams/operators',
//       'NativeModule internal/streams/destroy',
//       'NativeModule internal/streams/legacy',
//       'NativeModule internal/streams/add-abort-signal',
//       'NativeModule internal/streams/buffer_list',
//       'NativeModule internal/streams/state',
//       'NativeModule string_decoder',
//       'NativeModule internal/streams/from',
//       'NativeModule internal/streams/readable',
//       'NativeModule internal/streams/writable',
//       'NativeModule internal/streams/duplex',
//       'NativeModule internal/streams/utils',
//       'NativeModule internal/streams/pipeline',
//       'NativeModule internal/streams/compose',
//       'NativeModule stream/promises',
//       'NativeModule internal/streams/transform',
//       'NativeModule internal/streams/passthrough',
//       'NativeModule stream',
//       'NativeModule internal/worker/io',
//       'NativeModule internal/perf/performance_entry',
//       'NativeModule internal/perf/observe',
//       'NativeModule internal/perf/resource_timing',
//       'NativeModule internal/perf/nodetiming',
//       'NativeModule internal/perf/usertiming',
//       'NativeModule internal/perf/event_loop_utilization',
//       'NativeModule internal/histogram',
//       'NativeModule internal/perf/timerify',
//       'NativeModule internal/perf/performance',
//       'NativeModule internal/perf/event_loop_delay',
//       'NativeModule perf_hooks',
//       'NativeModule internal/process/execution',
//       'NativeModule internal/process/warning',
//       'Internal Binding fs',
//       'NativeModule internal/fs/utils',
//       'Internal Binding fs_dir',
//       'NativeModule internal/fs/dir',
//       'Internal Binding fs_event_wrap',
//       'Internal Binding uv',
//       ... 62 more items
//     ],
//     binding: [Function: binding],
//     _linkedBinding: [Function: _linkedBinding],
//     _events: [Object: null prototype] {
//       newListener: [Function: startListeningIfSignal],
//       removeListener: [Function: stopListeningIfSignal],
//       warning: [Function: onWarning],
//       SIGWINCH: [Function: refreshStdoutOnSigWinch]
//     },
//     _eventsCount: 4,
//     _maxListeners: undefined,
//     domain: null,
//     _exiting: [Getter/Setter],
//     config: [Getter/Setter],
//     dlopen: [Function: dlopen],
//     uptime: [Function: uptime],
//     _getActiveRequests: [Function: _getActiveRequests],
//     _getActiveHandles: [Function: _getActiveHandles],
//     getActiveResourcesInfo: [Function (anonymous)],
//     reallyExit: [Function: reallyExit],
//     _kill: [Function: _kill],
//     cpuUsage: [Function: cpuUsage],
//     resourceUsage: [Function: resourceUsage],
//     memoryUsage: [Function: memoryUsage] { rss: [Function: rss] },
//     kill: [Function: kill],
//     exit: [Function: exit],
//     hrtime: [Function: hrtime] { bigint: [Function: hrtimeBigInt] },
//     openStdin: [Function (anonymous)],
//     getuid: [Function: getuid],
//     geteuid: [Function: geteuid],
//     getgid: [Function: getgid],
//     getegid: [Function: getegid],
//     getgroups: [Function: getgroups],
//     allowedNodeEnvironmentFlags: [Getter/Setter],
//     assert: [Function: deprecated],
//     features: {
//       inspector: true,
//       debug: false,
//       uv: true,
//       ipv6: true,
//       tls_alpn: true,
//       tls_sni: true,
//       tls_ocsp: true,
//       tls: true,
//       cached_builtins: [Getter]
//     },
//     _fatalException: [Function (anonymous)],
//     setUncaughtExceptionCaptureCallback: [Function: setUncaughtExceptionCaptureCallback],
//     hasUncaughtExceptionCaptureCallback: [Function: hasUncaughtExceptionCaptureCallback],
//     emitWarning: [Function: emitWarning],
//     nextTick: [Function: nextTick],
//     _tickCallback: [Function: runNextTicks],
//     _debugProcess: [Function: _debugProcess],
//     _debugEnd: [Function: _debugEnd],
//     _startProfilerIdleNotifier: [Function (anonymous)],
//     _stopProfilerIdleNotifier: [Function (anonymous)],
//     stdout: [Getter],
//     stdin: [Getter],
//     stderr: [Getter],
//     abort: [Function: abort],
//     umask: [Function: wrappedUmask],
//     chdir: [Function: wrappedChdir],
//     cwd: [Function: wrappedCwd],
//     initgroups: [Function: initgroups],
//     setgroups: [Function: setgroups],
//     setegid: [Function (anonymous)],
//     seteuid: [Function (anonymous)],
//     setgid: [Function (anonymous)],
//     setuid: [Function (anonymous)],
//     env: {
//       MallocNanoZone: '0',
//       USER: 'vikramkumar',
//       COMMAND_MODE: 'unix2003',
//       __CFBundleIdentifier: 'com.microsoft.VSCode',
//       PATH: '/Users/vikramkumar/.pyenv/shims:/Users/vikramkumar/.pyenv/bin:/Users/vikramkumar/.nvm/versions/node/v16.19.1/bin:/opt/homebrew/opt/node@14/bin:/opt/homebrew/opt/php@7.4/sbin:/opt/homebrew/opt/php@7.4/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/vikramkumar/.pyenv/bin:/Users/vikramkumar/.nvm/versions/node/v16.19.1/bin:/opt/homebrew/opt/node@14/bin:/opt/homebrew/opt/php@7.4/sbin:/opt/homebrew/opt/php@7.4/bin:/opt/homebrew/bin:/opt/homebrew/sbin',
//       LOGNAME: 'vikramkumar',
//       SSH_AUTH_SOCK: '/private/tmp/com.apple.launchd.GAHur1ojlO/Listeners',
//       HOME: '/Users/vikramkumar',
//       SHELL: '/bin/zsh',
//       TMPDIR: '/var/folders/71/zvh69b911xlfvlhz1pznmvt80000gn/T/',
//       __CF_USER_TEXT_ENCODING: '0x1F5:0x0:0x0',
//       XPC_SERVICE_NAME: '0',
//       XPC_FLAGS: '0x0',
//       ORIGINAL_XDG_CURRENT_DESKTOP: 'undefined',
//       SHLVL: '1',
//       PWD: '/Users/vikramkumar/practice/javascript_lang',
//       OLDPWD: '/Users/vikramkumar/practice/javascript_lang',
//       HOMEBREW_PREFIX: '/opt/homebrew',
//       HOMEBREW_CELLAR: '/opt/homebrew/Cellar',
//       HOMEBREW_REPOSITORY: '/opt/homebrew',
//       MANPATH: '/Users/vikramkumar/.nvm/versions/node/v16.19.1/share/man:/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/Users/vikramkumar/.nvm/versions/node/v16.19.1/share/man:/opt/homebrew/share/man::',
//       INFOPATH: '/opt/homebrew/share/info:/opt/homebrew/share/info:',
//       NVM_DIR: '/Users/vikramkumar/.nvm',
//       NVM_CD_FLAGS: '-q',
//       NVM_BIN: '/Users/vikramkumar/.nvm/versions/node/v16.19.1/bin',
//       NVM_INC: '/Users/vikramkumar/.nvm/versions/node/v16.19.1/include/node',
//       PYENV_ROOT: '/Users/vikramkumar/.pyenv',
//       PYENV_SHELL: 'zsh',
//       TERM_PROGRAM: 'vscode',
//       TERM_PROGRAM_VERSION: '1.77.0',
//       LANG: 'en_US.UTF-8',
//       COLORTERM: 'truecolor',
//       GIT_ASKPASS: '/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh',
//       VSCODE_GIT_ASKPASS_NODE: '/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)',
//       VSCODE_GIT_ASKPASS_EXTRA_ARGS: '--ms-enable-electron-run-as-node',
//       VSCODE_GIT_ASKPASS_MAIN: '/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js',
//       VSCODE_GIT_IPC_HANDLE: '/var/folders/71/zvh69b911xlfvlhz1pznmvt80000gn/T/vscode-git-79e1eb0b13.sock',
//       VSCODE_INJECTION: '1',
//       ZDOTDIR: '/Users/vikramkumar',
//       USER_ZDOTDIR: '/Users/vikramkumar',
//       TERM: 'xterm-256color',
//       _: '/Users/vikramkumar/.nvm/versions/node/v16.19.1/bin/node'
//     },
//     title: 'node',
//     argv: [
//       '/Users/vikramkumar/.nvm/versions/node/v16.19.1/bin/node',
//       '/Users/vikramkumar/practice/javascript_lang/_8_node/_3_modules/process/_1_.js'
//     ],
//     execArgv: [],
//     pid: 21538,
//     ppid: 21063,
//     execPath: '/Users/vikramkumar/.nvm/versions/node/v16.19.1/bin/node',
//     debugPort: 9229,
//     argv0: 'node',
//     exitCode: undefined,
//     _preload_modules: [],
//     report: [Getter],
//     setSourceMapsEnabled: [Function: setSourceMapsEnabled],
//     mainModule: Module {
//       '9': [Function: internalRequire],
//       id: '.',
//       path: '/Users/vikramkumar/practice/javascript_lang/_8_node/_3_modules/process',
//       exports: {},
//       filename: '/Users/vikramkumar/practice/javascript_lang/_8_node/_3_modules/process/_1_.js',
//       loaded: false,
//       children: [],
//       paths: [
//         '/Users/vikramkumar/practice/javascript_lang/_8_node/_3_modules/process/node_modules',
//         '/Users/vikramkumar/practice/javascript_lang/_8_node/_3_modules/node_modules',
//         '/Users/vikramkumar/practice/javascript_lang/_8_node/node_modules',
//         '/Users/vikramkumar/practice/javascript_lang/node_modules',
//         '/Users/vikramkumar/practice/node_modules',
//         '/Users/vikramkumar/node_modules',
//         '/Users/node_modules',
//         '/node_modules'
//       ]
//     },
//     [Symbol(kCapture)]: false
//   }
